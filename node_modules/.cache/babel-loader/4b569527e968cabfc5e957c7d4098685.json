{"ast":null,"code":"var _jsxFileName = \"/home/tql/Documents/mern-TRot Chat/src/components/Chats.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { auth } from \"../firebase\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\n\nconst Chats = () => {\n  const history = useHistory();\n  const {\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n\n  const handleLogout = async () => {\n    await auth.signOut();\n    history.push(\"/\");\n  };\n\n  const getFile = async url => {\n    const response = await fetch(url);\n    const data = await response.blob();\n    return new File([data], \"userPhoto.jpg\", {\n      type: \"image/jpeg\"\n    });\n  };\n\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/\");\n      return;\n    }\n\n    axios.get(\"https://api.chatengine.io/users/me/\", {\n      headers: {\n        \"project-id\": process.env.PROJECT_ID,\n        \"user-name\": user.emai,\n        \"user-secret\": user.uid\n      }\n    }).then(() => {\n      setLoading(false);\n    }).catch(() => {\n      let formdata = new FormData();\n      formdata.append(\"email\", user.email);\n      formdata.append(\"username\", user.email);\n      formdata.append(\"secret\", user.uid);\n      getFile(user.photoURL).then(avatar => {\n        formdata.append(\"avatar\", avatar, avatar.name);\n        axios.post(\"https://api.chatengine.io/users/\", formdata, {\n          headers: {\n            \"private-key\": process.env.PRIVATE_KEY\n          }\n        }).then(() => setLoading(false)).catch(error => {\n          console.log(error);\n        });\n      });\n    });\n  }, [user, history]);\n  if (!user || !loading) return \"Loading...\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"TrotChat\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleLogout,\n    className: \"logout-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"LogOut\")), /*#__PURE__*/React.createElement(ChatEngine, {\n    height: \"calc(110vh-66px)\",\n    projectID: process.env.PROJECT_ID,\n    userName: user.email,\n    userSecret: user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chats;","map":{"version":3,"sources":["/home/tql/Documents/mern-TRot Chat/src/components/Chats.js"],"names":["React","useState","useEffect","useHistory","ChatEngine","auth","useAuth","axios","Chats","history","user","loading","setLoading","handleLogout","signOut","push","getFile","url","response","fetch","data","blob","File","type","get","headers","process","env","PROJECT_ID","emai","uid","then","catch","formdata","FormData","append","email","photoURL","avatar","name","post","PRIVATE_KEY","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { auth } from \"../firebase\";\n\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\n\nconst Chats = () => {\n  const history = useHistory();\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n\n  const handleLogout = async () => {\n    await auth.signOut();\n    history.push(\"/\");\n  };\n\n  const getFile = async (url) => {\n    const response = await fetch(url);\n    const data = await response.blob();\n\n    return new File([data], \"userPhoto.jpg\", { type: \"image/jpeg\" });\n  };\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/\");\n\n      return;\n    }\n    axios\n      .get(\"https://api.chatengine.io/users/me/\", {\n        headers: {\n          \"project-id\": process.env.PROJECT_ID,\n          \"user-name\": user.emai,\n          \"user-secret\": user.uid,\n        },\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch(() => {\n        let formdata = new FormData();\n        formdata.append(\"email\", user.email);\n        formdata.append(\"username\", user.email);\n        formdata.append(\"secret\", user.uid);\n\n        getFile(user.photoURL).then((avatar) => {\n          formdata.append(\"avatar\", avatar, avatar.name);\n\n          axios\n            .post(\"https://api.chatengine.io/users/\", formdata, {\n              headers: {\n                \"private-key\": process.env.PRIVATE_KEY,\n              },\n            })\n            .then(() => setLoading(false))\n            .catch((error) => {\n              console.log(error);\n            });\n        });\n      });\n  }, [user, history]);\n\n  if (!user || !loading) return \"Loading...\";\n  return (\n    <div className=\"chat-page\">\n      <div className=\"nav-bar\">\n        <div className=\"logo-tab\">TrotChat</div>\n        <div onClick={handleLogout} className=\"logout-tab\">\n          LogOut\n        </div>\n      </div>\n      <ChatEngine\n        height=\"calc(110vh-66px)\"\n        projectID={process.env.PROJECT_ID}\n        userName={user.email}\n        userSecret={user.uid}\n      />\n    </div>\n  );\n};\n\nexport default Chats;\n"]},"metadata":{},"sourceType":"module"}